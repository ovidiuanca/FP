from domain import *
from Controller import *
from Validator import *

class UI:
	def __init__(self, my_controller):
		self._controller = my_controller

	def print_menu(self):
		print("Available commands:")
		print("<1> Add an activity")
		print("<2> Add a person")
		print("<3> Update")
		print("<4> List persons and activities")
		print("<5> Search a person")
		print("<6> Search an activity")
		print("<7> Sorting")
		print("<8> Undo")
		print("<9> Redo")
		print("<0> Exit\n")
	
	def do_menu(self):
		while (True):
			self.print_menu()
			comm = input("Give your command: ")
			if (comm == '0'):
				print("Goodbye!")
				return
			elif (comm == '1'):
				self.add_activity()
			elif (comm == '2'):
				self.add_person()
			elif (comm == '3'):
				pass
			elif (comm == '4'):
				self.print_activities()
			elif (comm == '5'):
				pass
			elif (comm == '6'):
				pass
			elif (comm == '7'):
				pass
			elif (comm == '8'):
				pass
			elif (comm == '9'):
				pass
			else:
				print("Command error!")

	def add_activity(self):
		while (True):
			ID = input("Insert the ID of the activity: ")
			if (Validator.verify_numeric(ID)):
				break
			else:
				print("ID invalid!")
		while (True):
			date = input("Insert the year of the activity: ")
			if (Validator.verify_time(date)):
				break
			else:
				print("Wrong year input!")
		while (True):
			time = input("Insert the duration of the activity: ")
			if (Validator.verify_time(time)):
				break
			else:
				print("Wrong input!")
		description = input("Insert the description for this activity: ")
		self._controller.add_activity(ID, date, time, description)

	def print_activities(self):
		my_list = self._controller.getAll()
		for act in my_list:
			print("ID: " + act.ID + " Date: " + act.date + " Time: " + act.time + " Description: " + act.description + '\n')

	def add_person(self):
		while (True):
			ID = input("Give the ID for the person: ")
			if (Validator.verify_numeric(ID)):
				break
			else:
				print("Please enter a valid ID!")
		while (True):
			name = input("Give the name for the person: ")
			if (Validator.verify_name(name)):
				break
			else:
				print("Please enter a valid name. No spaces!")
		while (True):
			phone = input("Give the person's mobile number: ")
			if (Validator.verify_numeric(phone)):
				break
			else:
				print("Please enter a valid mobile number!")
		address = input("Give the address of the person: ")
		activities = []
		ok = 1
		while (ok):
			activity_id = input("Give the ID of an activity for the person: ")
			if (self._controller.search_activity(activity_id)):
				activities.append(self._controller.get_activity(activity_id))
				while (True)
					dec
			else:
				print("There is no such activity!")
			while (True):
				dec = input("Do you want to add another activity for the person? <y> or <n>")
				if (dec == 'y'):
					break
				elif (dec == 'n'):
					ok = 0
					break
				else:
					print("Only answer with 'y' or 'n'!")
		self._controller.add_person(ID, name, phone, address, activities)

	@staticmethod
	def read_person():
		while (True):
			try:
				ID =int( input("Give the person's ID: "))
				break
			except ValueError:
				print("ID invalid!")
				'''
			if (not Validator.verify_numeric(ID)):
				print("Please enter a valid ID. Only numericals!")
			else:
				break
				'''
		while (True):
			name = input("Give the person's name: ")
			if (not Validator.verify_name(name)):
				print("Please enter a valid name. No spaces!")
			else:
				break
		while (True):
			phone = input("Give the person's phone number: ")
			if (not Validator.verify_numeric(phone)):
				print("Please enter a valid phone number. Only numericals!")
			else:
				break
		address = input("Give the person's address: ")
		return (Persons(ID, name, phone, address))

	@staticmethod
	def read_activity(person):
		while (True):
			date = input("Give the date of the activity, (its year): ")
			if (not Validator.verify_time(date)):
				print("Please enter a valid year!")
			else:
				break
		while (True):
			time = input("Give the duration of the activity: ")
			if (not Validator.verify_time(time)):
				print("Please enter a valid duration, in hours!")
			else:
				break
		description = input("Give the description of this activity: ")
		return (Activities(person.ID, date, time, description))
